name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: student_marks_test
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies for backend
        working-directory: ./backend
        run: npm install

      - name: Install dependencies for frontend
        working-directory: ./frontend
        run: npm install

      - name: Run ESLint for backend
        working-directory: ./backend
        run: npx eslint . --max-warnings=0

      - name: Run ESLint for frontend
        working-directory: ./frontend
        run: npx eslint . --max-warnings=0

      - name: Set up database connection
        run: |
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=student_marks_test" >> .env

      - name: Set up JWT secret
        run: |
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env  # Append instead of overwriting

      - name: Debug .env file
        run: |
          echo "=== Checking if .env exists ==="
          ls -la
          echo "=== .env File Contents ==="
          if [ -f .env ]; then cat .env | grep -v 'JWT_SECRET'; else echo ".env file not found!"; fi

      - name: Load Environment Variables
        run: export $(grep -v '^#' .env | xargs)

      - name: Debug JWT Secret in App
        working-directory: ./backend
        run: |
          echo "Checking JWT_SECRET..."
          node -e 'console.log("Loaded JWT Secret:", process.env.JWT_SECRET ? "✅ Loaded" : "❌ Not Found")'

      - name: Run tests for backend
        working-directory: ./backend
        run: npm test -- --ci
